1
00:00:00,090 --> 00:00:02,969
花点时间想一下你能想到的

2
00:00:02,969 --> 00:00:05,160
应该这样做的所有原因

3
00:00:05,160 --> 00:00:08,890
下面我用一个示例为大家展示一下这样做的好处

4
00:00:08,890 --> 00:00:13,210
基本而言 现实中是几乎不会出现逻辑如此简单的代码

5
00:00:13,210 --> 00:00:16,190
所以 你不太可能愿意反复输入相同代码

6
00:00:16,190 --> 00:00:18,220
如果我们的代码是这样呢？

7
00:00:18,220 --> 00:00:21,340
显然 我并不愿意在每次移动车辆时

8
00:00:21,340 --> 00:00:22,900
都输入这段代码

9
00:00:22,900 --> 00:00:25,850
但通过将它提取为一个函数

10
00:00:25,850 --> 00:00:28,680
我就可以简单的在这里写上意图 (调用函数)

11
00:00:28,680 --> 00:00:31,330
然后所有改动就按照预想发生了

12
00:00:31,330 --> 00:00:35,300
但更重要的一个原因是为了

13
00:00:35,300 --> 00:00:37,660
提升你重构代码的经验

14
00:00:37,660 --> 00:00:41,800
如果你想更改程序中的车辆运动方式

15
00:00:41,800 --> 00:00:44,050
那么你只需要在这段代码中修改这一处

16
00:00:44,050 --> 00:00:46,950
然后 在你调用函数的两处地方都会

17
00:00:46,950 --> 00:00:48,420
正确的应用改动

18
00:00:48,420 --> 00:00:52,410
假设你想要改变程序中车辆的运动方式

19
00:00:52,410 --> 00:00:56,080
于是你添加了一个这样的方程式 虽然这个等式没有意义

20
00:00:56,080 --> 00:00:58,610
但是比方说 你在这里添加了一些有意义的内容

21
00:00:58,610 --> 00:01:01,520
如果所有的运动逻辑都像这样列在同一处

22
00:01:01,520 --> 00:01:04,430
那么在修改完这个函数之后 你就可以自信地认为已经对程序做了所有你想要的改动

23
00:01:04,430 --> 00:01:07,620
保证程序可以开始正确运行了
